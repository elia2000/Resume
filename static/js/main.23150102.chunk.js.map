{"version":3,"sources":["Components/item1.js","Components/item2.js","Components/Nav.js","Components/Snow.js","Components/fullpage.js","Components/Scroller.js","Sections/HelloSec.js","Sections/About.js","Components/Card.js","Sections/Skills.js","Components/UpArrow.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Component","Item2","Color","this","props","bgColor","className","activeClass","to","spy","smooth","offset","duration","delay","style","color","borderColor","data","nav","title1","title2","Nav","Snow","flakesMax","flakesMaxActive","followMouse","snowCharacter","snowColor","vMaxY","vMaxX","Fullpage","children","backgroundColor","Scroller","Sec","src","DownArrow","alt","width","height","cursor","Hellosec","name","title","subtitle","Object","keys","links","map","key","url","fgColor","About","sections","items","content","Card","skillName","image","Skills","type","skill","UpArrow","position","bottom","right","App","changeColor","colors","state","itt","length","setState","onLoad","icon","onClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.23150102.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport \"./item1.css\";\r\n\r\nclass Item1 extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"item1\">\r\n        <img\r\n          src={data.nav.icon}\r\n          alt=\"wizard-ico\"\r\n          width=\"25px\"\r\n          height=\"25px\"\r\n          className=\"wizard\"\r\n        />\r\n        <h6 className=\"colorChenge\">Color-Chenger</h6>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Item1;\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport * as Scroll from \"react-scroll\";\r\nimport { Link, Element } from \"react-scroll\";\r\nimport \"./item2.css\";\r\n\r\nclass Item2 extends Component {\r\n  render() {\r\n    let { Color } = this.props;\r\n    let { bgColor } = this.props;\r\n    return (\r\n      <div className=\"item2\">\r\n        <span className=\"it2\">\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"About\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={50}\r\n            duration={500}\r\n            delay={0}\r\n          >\r\n            <h6\r\n              className=\"about\"\r\n              style={{\r\n                color: Color,\r\n                borderColor: Color\r\n              }}\r\n            >\r\n              {data.nav.title1}\r\n            </h6>\r\n          </Link>\r\n        </span>\r\n        <h6\r\n          style={{\r\n            color: Color\r\n          }}\r\n        >\r\n          |\r\n        </h6>\r\n        <span className=\"it2\">\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"Skills\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={50}\r\n            duration={500}\r\n            delay={0}\r\n          >\r\n            <h6\r\n              className=\"skills\"\r\n              style={{\r\n                color: Color,\r\n                borderColor: Color\r\n              }}\r\n            >\r\n              {data.nav.title2}\r\n            </h6>\r\n          </Link>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Item2;\r\n","import React, { Component } from \"react\";\r\nimport Item1 from \"./item1.js\";\r\nimport Item2 from \"./item2.js\";\r\nimport data from \"../data.json\";\r\nimport \"./Nav.css\";\r\n\r\nclass Nav extends Component {\r\n  render() {\r\n    let { Color } = this.props;\r\n    let { bgColor } = this.props;\r\n    return (\r\n      <div className=\"navcontainer\">\r\n        <Item2 Color={Color} bgColor={bgColor} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\nimport SnowStorm from \"react-snowstorm\";\r\n\r\nclass Snow extends Component {\r\n  render() {\r\n\tlet { Color } = this.props;\r\n    return (\r\n      <div>\r\n        <SnowStorm\r\n          flakesMax={96}\r\n          flakesMaxActive={96}\r\n          followMouse=\" false\"\r\n          snowCharacter=\"*\"\r\n          snowColor=\"#777\"\r\n          vMaxY={5}\r\n          vMaxX={1}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Snow;\r\n","import React, { Component } from \"react\";\r\nimport \"./fullpage.css\";\r\nimport Snow from \"./Snow\";\r\n\r\nclass Fullpage extends Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    let { bgColor } = this.props;\r\n    let { Color } = this.props;\r\n    return (\r\n      <div\r\n        className={`fullpage ${this.props.className || \"\"}`}\r\n        style={{\r\n          backgroundColor: bgColor,\r\n          Color: Color\r\n        }}\r\n      >\r\n        {children}\r\n        <Snow Color={Color} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fullpage;\r\n","import React, { Component } from \"react\";\r\nimport * as Scroll from \"react-scroll\";\r\nimport { Link, Element } from \"react-scroll\";\r\nimport data from \"../data.json\";\r\n\r\nclass Scroller extends Component {\r\n  render() {\r\n    let { Sec } = this.props;\r\n    return (\r\n      <Link\r\n        activeClass=\"active\"\r\n        to={Sec}\r\n        spy={true}\r\n        smooth={true}\r\n        offset={50}\r\n        duration={500}\r\n        delay={0}\r\n      >\r\n        <img\r\n          src={data.DownArrow}\r\n          alt=\"DownArrow\"\r\n          width=\"30px\"\r\n          height=\"30px\"\r\n          className=\"DownArrow\"\r\n          style={{\r\n            cursor:\"pointer\"\r\n          }}\r\n        />\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scroller;\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport Fullpage from \"../Components/fullpage\";\r\nimport * as Scroll from \"react-scroll\";\r\nimport { Link, Element } from \"react-scroll\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport Scroller from \"../Components/Scroller.js\";\r\nimport \"./HelloSec.css\";\r\n\r\nclass Hellosec extends Component {\r\n  render() {\r\n    let { Color } = this.props;\r\n    let { bgColor } = this.props;\r\n    return [\r\n      <Element name=\"Top\" />,\r\n      <Fullpage Color={Color} bgColor={bgColor}>\r\n        <h1\r\n          className=\"title\"\r\n          style={{\r\n            color: Color\r\n          }}\r\n        >\r\n          {data.title}\r\n        </h1>\r\n        <div>\r\n          <h2\r\n            style={{\r\n              color: Color\r\n            }}\r\n          >\r\n            {data.subtitle}\r\n          </h2>\r\n        </div>\r\n        <div className=\"SocialsIcon\">\r\n          {Object.keys(data.links).map(key => {\r\n            return (\r\n              <SocialIcon\r\n                url={data.links[key]}\r\n                fgColor={Color}\r\n                bgColor={bgColor}\r\n                style={{ height: 75, width: 75 }}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"containerH\">\r\n          <Scroller Sec=\"About\" />\r\n        </div>\r\n      </Fullpage>\r\n    ];\r\n  }\r\n}\r\n\r\nexport default Hellosec;\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport Fullpage from \"../Components/fullpage\";\r\nimport Scroller from \"../Components/Scroller.js\";\r\nimport * as Scroll from \"react-scroll\";\r\nimport { Link, Element } from \"react-scroll\";\r\nimport \"./About.css\";\r\n\r\nclass About extends Component {\r\n  render() {\r\n    let { Color } = this.props;\r\n    let { bgColor } = this.props;\r\n    return [\r\n      <Element name=\"About\" />,\r\n      <Fullpage\r\n        Color={Color}\r\n        bgColor={bgColor}\r\n        style={{\r\n          backgroundColor: bgColor\r\n        }}\r\n      >\r\n        <h3\r\n          style={{\r\n            color: Color\r\n          }}\r\n        >\r\n          {data.sections[0].title}\r\n        </h3>\r\n        <div>\r\n          {data.sections[0].items.map(key => {\r\n            return (\r\n              <p\r\n                style={{\r\n                  color: Color\r\n                }}\r\n              >\r\n                {key.content}\r\n              </p>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"containerA\">\r\n          <Scroller Sec=\"Skills\"/>\r\n        </div>\r\n      </Fullpage>\r\n    ];\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport Fullpage from \"./fullpage\";\r\nimport \"./Card.css\";\r\n\r\nclass Card extends Component {\r\n  render() {\r\n    const { skillName } = this.props;\r\n    let { Color } = this.props;\r\n    let { bgColor } = this.props;\r\n    return (\r\n      <div\r\n        className=\"card\"\r\n        style={{\r\n          borderColor: Color\r\n        }}\r\n      >\r\n        <div className=\"imgWapper\">\r\n          <img src={skillName.content.image} alt=\"img\" className=\"img\" />\r\n        </div>\r\n        <div className=\"titleWapper\">\r\n          <h4\r\n            style={{\r\n              color: Color,\r\n              backgroundColor: bgColor\r\n            }}\r\n          >\r\n            {skillName.content.title}\r\n          </h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../Components/fullpage\";\r\nimport Card from \"../Components/Card.js\";\r\nimport * as Scroll from \"react-scroll\";\r\nimport { Link, Element } from \"react-scroll\";\r\nimport data from \"../data.json\";\r\nimport \"./Skill.css\";\r\n\r\nclass Skills extends Component {\r\n  render() {\r\n    let { Color } = this.props;\r\n    let { bgColor } = this.props;\r\n    return [\r\n      <Element name=\"Skills\" type=\"Arrow\"/>,\r\n      <Fullpage Color={Color} bgColor={bgColor}>\r\n        <h5\r\n          style={{\r\n            color: Color,\r\n            backgroundColor: bgColor\r\n          }}\r\n        >\r\n          Skills\r\n        </h5>\r\n        <div className=\"cardsWarpper\">\r\n          {data.sections[1].items.map(skill => {\r\n            return <Card Color={Color} bgColor={bgColor} skillName={skill} />;\r\n          })}\r\n        </div>\r\n      </Fullpage>\r\n    ];\r\n  }\r\n}\r\n\r\nexport default Skills;\r\n","import React, { Component } from \"react\";\r\nimport * as Scroll from \"react-scroll\";\r\nimport { Link, Element } from \"react-scroll\";\r\nimport data from \"../data.json\";\r\n\r\nclass UpArrow extends Component {\r\n  render() {\r\n    return (\r\n      <Link\r\n        activeClass=\"active\"\r\n        to=\"Top\"\r\n        spy={true}\r\n        smooth={true}\r\n        offset={50}\r\n        duration={500}\r\n        delay={0}\r\n      >\r\n        <img\r\n          src={data.UpArrow}\r\n          alt=\"UpArrow\"\r\n          width=\"30px\"\r\n          height=\"30px\"\r\n          className=\"UpArrow\"\r\n          style={{\r\n            cursor: \"pointer\",\r\n            position: \"fixed\",\r\n            bottom: \"20px\",\r\n            right: \"20px\"\r\n          }}\r\n        />\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpArrow;\r\n","import React, { Component } from \"react\";\nimport data from \"./data.json\";\nimport logo from \"./logo.svg\";\nimport Nav from \"./Components/Nav.js\";\nimport Hellosec from \"./Sections/HelloSec.js\";\nimport About from \"./Sections/About.js\";\nimport Skills from \"./Sections/Skills.js\";\nimport { render } from \"@testing-library/react\";\nimport UpArrow from \"./Components/UpArrow.js\";\nimport \"./App.css\";\n\nclass App extends Component {\n  // ***  Color Changer START ***\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: data.nav.colors.Color[0],\n      bgColor: data.nav.colors.bgColor[0],\n      itt: 0\n    };\n  }\n  changeColor = () => {\n    let { Color } = data.nav.colors;\n    let { bgColor } = data.nav.colors;\n    if (this.state.itt + 1 >= data.nav.colors.Color.length) {\n      this.setState({\n        itt: 0,\n        bgColor: bgColor[0],\n        color: Color[1]\n      });\n    } else {\n      this.setState({\n        itt: this.state.itt + 1,\n        Color: Color[this.state.itt],\n        bgColor: bgColor[this.state.itt]\n      });\n    }\n  };\n  // ***  Color Changer END ***\n  render() {\n    return (\n      <div className=\"App\" onLoad={this.changeColor}>\n        <Nav Color={this.state.Color} bgColor={this.state.bgColor} />\n        <img\n          src={data.nav.icon}\n          alt=\"wizard-ico\"\n          width=\"25px\"\n          height=\"25px\"\n          className=\"wizard\"\n          onClick={this.changeColor}\n        />\n        <Hellosec Color={this.state.Color} bgColor={this.state.bgColor} />\n        <About Color={this.state.Color} bgColor={this.state.bgColor} />\n        <Skills Color={this.state.Color} bgColor={this.state.bgColor} />\n        <UpArrow />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}